#Validation
# ${validatedValue} get validated value
valid.NotNull=is required.
valid.NotEmpty=can not be empty.
valid.Size.minmax=must be between {min} and {max} characters long.
valid.Size.min=must be at least {min} characters long.
valid.Size.max=must be no more than {max} characters long.
valid.Min=must be at least {value}.
valid.Max=must be not more than {value}.
valid.Pattern=value '${validatedValue}' does not match the pattern ({regexp})

valid.password.Match=Passwords don't math.
valid.password.TOO_SHORT=Password must be at least {0} characters long.
valid.password.TOO_LONG=Password must be no more than {1} characters long.
valid.password.INSUFFICIENT_LOWERCASE=Password must contain at least {0} lowercase characters.
valid.password.INSUFFICIENT_UPPERCASE=Password must contain at least {0} uppercase characters.
valid.password.INSUFFICIENT_DIGIT=Password must contain at least {0} digit characters.
valid.password.INSUFFICIENT_SPECIAL=Password must contain at least {0} special characters.

valid.email.invalidEmail='${validatedValue}' is not a valid email address.

#NotFound
apiException.notFound=Whoops.. Resource not found.
apiException.notFound.applicationUser=User ''{0}'' not found.
apiException.notFound.role=Role ''{0}'' not found.
apiException.notFound.roleId=Role with id {0} not found.
apiException.notFound.authority=Authority ''{0}'' not found.
apiException.notFound.authorityId=Authority with id {0} not found.

apiException.notFound.device=Device with id {0} not found.
apiException.notFound.sensor=Sensor with id {0} not found.
apiException.notFound.sensorType=Sensor type with id {0} not found.

apiException.notFound.topicId=Topic with id {0} not found.

#BadRequest
apiException.badRequest=Bad request. Looks like you did something wrong.
apiException.badRequest.roleInvalidName=Role name ''{0}'' is invalid role name.
apiException.badRequest.roleInvalidIdList=Some roles could not be found.
apiException.badRequest.authorityInvalidIdList=Some authorities could not be found.
apiException.badRequest.usernameInUse=Username ''{0}'' is being used by another user.
apiException.badRequest.emailInUse=Email ''{0}'' is being used by another user.
apiException.badRequest.invalidPassword=Invalid password.

apiException.badRequest.invalidNotificationAccessToken=Invalid token.
apiException.badRequest.topicInvalidIdList=Some topics could not be found.

apiException.badRequest.sensorVariable=Please check that you have provided valid sensor variables, \
    maximum value should not be less than minimum value.

#Forbidden
apiException.forbidden=Opss.. You don't have permission to view this resource.
apiException.forbidden.writeProtectedUser=User ''{0}'' is write protected.
apiException.forbidden.writeProtectedRole=Role ''{0}'' is write protected.

#Unathorized
apiException.unauthorized=Please login to view this resource.
apiException.unauthorized.invalidRefreshToken=Invalid refresh token.

#Conflict
apiException.conflict.roleExists=Role ''{0}'' already exists.

#InternalServerError
apiException.internalServerError=Whoops.. Something broke inside. Please contact admin if the problem persists.
apiException.internalServerError.roleNotSaved=Whoops.. An error occurred, role ''{0}'' could not be saved.

#OtherErrors
apiException.integrityViolation.deleteRole=Role ''{0}'' could not be deleted because other entities are depended on it.
apiException.integrityViolation.deleteDevice=Device ''{0}'' could not be deleted because other entities are depended on it.
apiException.integrityViolation.deleteSensorType=Sensor type ''{0}'' could not be deleted because other entities are depended on it.
apiException.requestBodyMissing=Request body is missing.

